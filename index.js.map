{"mappings":";;;;;;;AAEO,MAAM,yCAAmB,GAAG,CAAC,KAAa,EAAE,QAA0C,GAAM,CAAA;QAC/F,KAAK,EAAE,KAAK;QACZ,QAAQ,EAAE,CAAC,CAA+B,GAAK,QAAQ,CAAC,AAAC,CAAC,CAAC,MAAM,CAAuB,KAAK,CAAC;KACjG,CAAA,AAAC,AAAC;AAEI,MAAM,yCAAkB,GAAG,CAAC,KAAa,EAAE,QAA0C,GAAM,CAAA;QAC9F,KAAK,EAAE,KAAK;QACZ,QAAQ,EAAE,CAAC,CAA8B,GAAK,QAAQ,CAAC,AAAC,CAAC,CAAC,MAAM,CAAsB,KAAK,CAAC;KAC/F,CAAA,AAAC,AAAC;AAEI,MAAM,yCAAqB,GAAG,CAAC,KAAa,EAAE,QAA0C,GAAM,CAAA;QACjG,KAAK,EAAE,KAAK;QACZ,QAAQ,EAAE,CAAC,CAAiC,GAAK,QAAQ,CAAC,AAAC,CAAC,CAAC,MAAM,CAAyB,KAAK,CAAC;KACrG,CAAA,AAAC,AAAC","sources":["index.ts"],"sourcesContent":["import {Dispatch, FormEvent, SetStateAction} from \"react\";\n\nexport const getSelectStateProps = (state: string, setState: Dispatch<SetStateAction<string>>) => ({\n    value: state,\n    onChange: (e: FormEvent<HTMLSelectElement>) => setState((e.target as HTMLSelectElement).value),\n});\n\nexport const getInputStateProps = (state: string, setState: Dispatch<SetStateAction<string>>) => ({\n    value: state,\n    onChange: (e: FormEvent<HTMLInputElement>) => setState((e.target as HTMLInputElement).value),\n});\n\nexport const getTextAreaStateProps = (state: string, setState: Dispatch<SetStateAction<string>>) => ({\n    value: state,\n    onChange: (e: FormEvent<HTMLTextAreaElement>) => setState((e.target as HTMLTextAreaElement).value),\n});"],"names":[],"version":3,"file":"index.js.map"}